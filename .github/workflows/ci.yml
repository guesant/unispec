name: CI

on:
  push:
    branches:
      - main
      - development
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: write

env:
  PRIMARY_NODE_VERSION: 20

jobs:
  install:
    name: Checkout and Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}

  quality-check:
    name: Code Quality Check
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          node-version: ${{ matrix.node-version }}
      - name: Quality Check
        uses: ./.github/actions/quality-check

  build:
    name: Build All Packages
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
      - name: Build
        uses: ./.github/actions/prepare-build

  quality:
    name: Code quality check

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run Format Check
        run: npx nx affected -t format:check

      - name: Run Lint Check
        run: npx nx affected -t lint:check

      - name: Run Test Check
        run: npx nx affected -t test

      - name: Run Coverage Check
        run: npx nx affected -t coverage

      - name: Build Project
        run: npx nx affected -t build

  publish-prerelease:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}
    needs: quality
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/actions/prepare-install
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}

      - name: Build
        uses: ./.github/actions/prepare-build

      - name: Tag branch if all jobs succeed
        uses: nrwl/nx-tag-successful-ci-run@v1

      - run: git config --global user.email "release-bot<>"
      - run: git config --global user.name "guesant/unispec release bot"

      - run: npx nx release --specifier preminor --skip-publish

      - run: npx nx release publish --tag next --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
