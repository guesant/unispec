/**
 * ATTENTION. This code was AUTO GENERATED by schema2typebox.
 * While I don't know your use case, there is a high chance that direct changes
 * to this file get lost. Consider making changes to the underlying JSON schema
 * you use to generate this file instead. The default file is called
 * "schema.json", perhaps have a look there! :]
 */

import { Kind, SchemaOptions, Static, TSchema, TUnion, Type, TypeRegistry } from "@sinclair/typebox";
import { Value } from "@sinclair/typebox/value";

TypeRegistry.Set("ExtendedOneOf", (schema: any, value) => 1 === schema.oneOf.reduce((acc: number, schema: any) => acc + (Value.Check(schema, value) ? 1 : 0), 0));

const OneOf = <T extends TSchema[]>(oneOf: [...T], options: SchemaOptions = {}) => Type.Unsafe<Static<TUnion<T>>>({ ...options, [Kind]: "ExtendedOneOf", oneOf });

export type T = Static<typeof T>;
export const T = OneOf(
  [
    OneOf(
      [
        Type.Intersect(
          [
            Type.Intersect(
              [
                Type.Object({ kind: Type.String() }, { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeBase", $id: "UniNodeBase" }),
                Type.Object({ kind: Type.Literal("type", { default: "type" }), type: Type.String(), constraints: Type.Optional(Type.Unknown()) }),
              ],
              { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeTypeBase", $id: "UniNodeTypeBase" },
            ),
            Type.Object({ type: Type.Literal("string") }),
          ],
          { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeTypeString", $id: "UniNodeTypeString" },
        ),
        Type.Intersect(
          [
            Type.Intersect(
              [
                Type.Object({ kind: Type.String() }, { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeBase", $id: "UniNodeBase" }),
                Type.Object({ kind: Type.Literal("type", { default: "type" }), type: Type.String(), constraints: Type.Optional(Type.Unknown()) }),
              ],
              { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeTypeBase", $id: "UniNodeTypeBase" },
            ),
            Type.Object({ type: Type.Literal("boolean") }),
          ],
          { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeTypeBoolean", $id: "UniNodeTypeBoolean" },
        ),
      ],
      { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNodeType", $id: "UniNodeType" },
    ),
  ],
  { $schema: "http://json-schema.org/draft-07/schema#", name: "UniNode", $id: "UniNode" },
);
